name: Add-on CI

on:
  push:
    branches: [main, next-release]
  pull_request:
    branches: [main, next-release]

jobs:
  lint:
    runs-on: home-assistant-entity-manager
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy

      - name: Lint with flake8
        run: |
          # Stop build on Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=venv*,legacy
          # Exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics --exclude=venv*,legacy

      - name: Check formatting with black
        run: |
          black --check *.py --exclude="venv*|legacy"

      - name: Check import order with isort
        run: |
          isort --check-only *.py --skip-glob="venv*" --skip-glob="legacy/*"

  build:
    runs-on: home-assistant-entity-manager
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, aarch64, armv7, armhf, i386]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get base image
        id: base
        run: |
          BASE_IMAGE=$(jq -r ".build_from[\"${{ matrix.arch }}\"]" build.json)
          echo "base_image=$BASE_IMAGE" >> $GITHUB_OUTPUT

      - name: Set platform
        id: platform
        run: |
          case "${{ matrix.arch }}" in
            amd64) echo "platform=linux/amd64" >> $GITHUB_OUTPUT ;;
            aarch64) echo "platform=linux/arm64" >> $GITHUB_OUTPUT ;;
            armv7) echo "platform=linux/arm/v7" >> $GITHUB_OUTPUT ;;
            armhf) echo "platform=linux/arm/v6" >> $GITHUB_OUTPUT ;;
            i386) echo "platform=linux/386" >> $GITHUB_OUTPUT ;;
          esac

      - name: Build Add-on
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: local/entity_manager:${{ matrix.arch }}
          build-args: |
            BUILD_FROM=${{ steps.base.outputs.base_image }}
          platforms: ${{ steps.platform.outputs.platform }}

  validate-addon:
    runs-on: home-assistant-entity-manager
    steps:
      - uses: actions/checkout@v4

      - name: Validate config.json
        run: |
          python3 -m json.tool config.json > /dev/null
          echo "✓ config.json is valid JSON"

      - name: Validate build.json
        run: |
          python3 -m json.tool build.json > /dev/null
          echo "✓ build.json is valid JSON"

      - name: Validate repository.json
        run: |
          python3 -m json.tool repository.json > /dev/null
          echo "✓ repository.json is valid JSON"

      - name: Check required fields
        run: |
          # Check config.json has required fields
          jq -e '.name and .version and .slug and .description and .arch' config.json > /dev/null
          echo "✓ config.json has all required fields"
          
          # Check build.json has build_from for all architectures
          jq -e '.build_from | keys' build.json > /dev/null
          echo "✓ build.json has build_from configuration"