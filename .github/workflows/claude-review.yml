name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]
  issue_comment:
    types: [created]

jobs:
  claude-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # For PRs, checkout the PR branch
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          
      - name: Claude Code Review
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true  # Don't fail the workflow if review fails
          
  # Automatic review on PR open/update
  auto-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Request Claude Review
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const comment = `@claude Please review this PR and provide:
            
            1. **Summary** - What does this PR do?
            2. **Code Quality** - Are there any issues or improvements?
            3. **Security** - Any security concerns?
            4. **Testing** - Are tests adequate?
            5. **Documentation** - Is documentation sufficient?
            
            Focus on:
            - Python best practices
            - Home Assistant Add-on conventions
            - Error handling and edge cases
            - Performance implications`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: comment
            });